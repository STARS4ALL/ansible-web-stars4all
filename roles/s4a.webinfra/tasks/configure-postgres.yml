---
- name: get environment variables
  ansible.builtin.set_fact:
    pg_admin: '{{ lookup("ansible.builtin.env", "POSTGRES_USER", default=Undefined) }}'
    pg_passwd: '{{ lookup("ansible.builtin.env", "POSTGRES_PASSWORD", default=Undefined) }}'
    pg_database: '{{ lookup("ansible.builtin.env", "POSTGRES_DB", default=Undefined) }}'
    pg_port: '{{ lookup("ansible.builtin.env", "POSTGRES_PORT", default=Undefined) }}'

- name: produce the SQL to create a new database for Django
  ansible.builtin.template:
    src: pgsql_setup.sql.j2
    dest: '/tmp/pgsql_setup.sql'
    mode: '0644'

- name: Create a Django Database in Postgres (2)
  ansible.builtin.expect:
    command: 'psql -h localhost -p {{ pg_port }} -U {{ pg_admin }} -d {{ pg_database }} -f /tmp/pgsql_setup.sql'
    echo: false
    responses:
      (?i)admin: '{{ pg_passwd }}'

- name: Remove SQL file
  ansible.builtin.file:
    path: /tmp/pgsql_setup.sql
    state: absent
